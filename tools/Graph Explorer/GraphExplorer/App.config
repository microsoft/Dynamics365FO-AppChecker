<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="SocratexGraphExplorer.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
            <section name="GraphXTest.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>
    <userSettings>
        <SocratexGraphExplorer.Properties.Settings>
            <setting name="Username" serializeAs="String">
                <value>neo4j</value>
            </setting>
            <setting name="QueryFontSize" serializeAs="String">
                <value>12</value>
            </setting>
            <setting name="QueryFont" serializeAs="String">
                <value>Consolas</value>
            </setting>
            <setting name="Port" serializeAs="String">
                <value>7687</value>
            </setting>
            <setting name="Server" serializeAs="String">
                <value>localhost</value>
            </setting>
            <setting name="AppTitle" serializeAs="String">
                <value>Socratex Graph Explorer</value>
            </setting>
            <setting name="ConnectResultNodes" serializeAs="String">
                <value>True</value>
            </setting>
            <setting name="Configuration" serializeAs="String">
                <value>&lt;html&gt;
    &lt;head&gt;
       &lt;style type='text/css'&gt;
            #viz {
                width: 750px;
                height: 600px;
                border: 1px solid lightgray;
                font: 12pt arial;
                background: darkgray;
                margin-top: -8px;
                margin-bottom: -8px;
                margin-left: -8px;
                margin-right: -8px;
            }
        &lt;/style&gt;
        &lt;script src='https://rawgit.com/neo4j-contrib/neovis.js/master/dist/neovis.js'&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;script&gt;


        function init()
        {
            (async function()
            {
                await CefSharp.BindObjectAsync('csObject').then(function(res) 
                {    // The promise is resolved when the object is available.
                     // Objects are created in the global context (properties of the window object).
                     window.csObject.show('banana').then(function(res)
                     {
                     })
                });
            })();
        }

        function setVizSize(width, height)
        {
            document.getElementById('viz').style.width = width + "px";
            document.getElementById('viz').style.height = height + "px";
        }

        function NodeOrEdgeSelected(event) {
            window.csObject.select(event.nodes[0], event.edges[0]);
        }

        function draw(cypher) {
            var config = {
                container_id: 'viz',
                server_url: 'bolt://{Server}:{Port}',
                server_user: '{Username}',
                server_password: '{Password}',
                arrows: true, // Shows arrows on edges
                labels: {
                    'Class': {
                        caption: 'Name', // Works. Name of property on Class node
                        size: 'LOC' ,
                        // community: 1,

                        // This is what gets shown in the tooltip
                        'title_properties': [
                            'Name', 'LOC'
                        ],
                    },
                    'Table': {
                        caption: 'Name', 
                        size: 'LOC' ,
                        // community: 2,

                        // This is what gets shown in the tooltip
                        'title_properties': [
                            'Name', 'LOC'
                        ],
                    },
                    'Form': {
                        caption: 'Name', 
                        size: 'LOC' ,
                       //  community: 3,

                        // This is what gets shown in the tooltip
                        'title_properties': [
                            'Name', 'LOC'
                        ],
                    },                    
                    'Method': {
                        // This is what gets shown in the tooltip
                        'title_properties': [
                            'Method', 'LOC', 'NOS'
                        ],
                        caption: 'Name', // Works. Name of property on Method node
                        size: 'LOC',
                        // community: 4,
                    }
                },
                relationships: {
                    'EXTENDS': {
                        caption: true,  // Works
                    },
                    'DECLARES': {
                        caption: true,  // Works
                    },
                    'CALLS': {
                        'title_properties': [
                            'Count'
                        ],
                        caption: true,  
                        thickness: 'Count', // Need a property name on the edge

                    }
                },
                initial_cypher: cypher
            }
            var viz = new NeoVis.default(config);
            viz.registerOnEvent('completed', (e)=&gt;
            {
                viz['_network'].on('click', (event)=&gt;
                {
                    NodeOrEdgeSelected(event);
                    console.log(event.nodes[0]);
                });
            });

            // Do the actual drawing
            viz.render();
        }
    &lt;/script&gt;

    &lt;body onload='init()' &gt;
        &lt;div id='viz'&gt;&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;</value>
            </setting>
            <setting name="SourceFontSize" serializeAs="String">
                <value>12</value>
            </setting>
            <setting name="SourceFont" serializeAs="String">
                <value>Consolas</value>
            </setting>
            <setting name="TextResultsFontSize" serializeAs="String">
                <value>12</value>
            </setting>
            <setting name="ShowLineNumbers" serializeAs="String">
                <value>True</value>
            </setting>
        </SocratexGraphExplorer.Properties.Settings>
    </userSettings>
</configuration>