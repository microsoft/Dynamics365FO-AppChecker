<!-- 
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
-->
<Application x:Class="GraphExplorer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"              
     	     xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"                         
             xmlns:local="clr-namespace:GraphExplorer"          
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <!-- Define a palette with primary and accent colors -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Grey.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Button" x:Key="PredefinedQueryButton">
                <Setter Property="Margin" Value="0,0,4,0"/>
                <Setter Property="BorderThickness" Value="0"  />
                <Setter Property="MaxWidth" Value="200" />
                <Setter Property="FontSize" Value="12"  />
            </Style>

            <Style x:Key="ChevronHorizontalToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                                    <EasingDoubleKeyFrame KeyTime="{StaticResource ExpandKeyTime}" Value="180"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                                    <EasingDoubleKeyFrame KeyTime="{StaticResource CollapseKeyTime}" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <materialDesign:PackIcon x:Name="ExpandPath" Kind="ChevronLeft"
                                      Opacity="0.38" Height="24" Width="24"
                                      Foreground="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5 0.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandPathRotateTransform"/>
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignPaper}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="Red"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="avalonedit:TextEditor" x:Key="SourceEditorStyle">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
