<!-- 
Copyright (c) Microsoft Corporation.
Licensed under the MIT license.
-->
<Window x:Class="SocratexGraphExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     	xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"        
        xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        xmlns:cef="clr-namespace:CefSharp;assembly=CefSharp.Core"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="700" Width="1200">

    <Window.Resources>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding SaveQueryCommand}" Gesture='Ctrl+S'/>
        <KeyBinding Command="{Binding OpenQueryCommand}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{Binding ApplicationExitCommand}" Gesture="Alt+F4"/>
    </Window.InputBindings>

    <DockPanel>
        <Menu IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem x:Name="FileMenu" Header="_File" >
                <MenuItem Header="Open Cypher Query..."  InputGestureText="Ctrl+O" Command="{Binding OpenQueryCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="OpenInApp"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save Cypher Query" InputGestureText="Ctrl+S" Command="{Binding SaveQueryCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Print" Command="{Binding PrintGraphCommand}" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Printer"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem x:Name="DeveloperToolsMenuItem" Header="Developer tools" Command="{Binding ShowDevToolsCommand}">
                </MenuItem>
                <MenuItem Header="_Exit" Command="{Binding ApplicationExitCommand}" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ExitToApp" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Command="Cut" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentCut" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Copy" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentCopy" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Paste">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentPaste" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Delete">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Delete"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Undo">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Undo"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Redo" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Redo"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="SelectAll" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="SelectAll"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Tasks">
                <MenuItem x:Name="ExecuteQueryMenuItem" Header="Execute Query"  Command="{Binding ExecuteQueryCommand}" InputGestureText="F5" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Play"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Hide Selected"  Command="{Binding HideNodeCommand}" ToolTip="Remove the selected node from the view" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Hide"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show only Selected"  Command="{Binding ShowOnlyNodeCommand}" ToolTip="Show only the selected node" />
                <MenuItem Header="Show outgoing edges"  Command="{Binding ShowOutgoingEdges}" ToolTip="Show the outgoing edges from the selected node" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="RayStart"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show incoming edges"  Command="{Binding ShowIncomingEdges}" ToolTip="Show the incoming edges to the selected node" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="RayEnd"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show edges"  Command="{Binding ShowEdges}" ToolTip="Show both the incoming and outgoing edges to the selected node" >
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="RayVertex"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Command="{Binding AboutCommand}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Help"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <StatusBar  DockPanel.Dock="Bottom" Height="48"  Background="{DynamicResource MaterialDesignBackground}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="140"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <Label Content="{Binding ErrorMessage}" FontFamily="Courier New"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="1">
                <Label Content="{Binding CaretPositionString}"></Label>
            </StatusBarItem>

        </StatusBar>

        <Grid>
            <Grid.RowDefinitions>
                <!-- Graph and information -->
                <RowDefinition Height="70*"/>
                <!-- Splitter -->
                <RowDefinition Height="Auto"/>
                <!-- Queries -->
                <RowDefinition Height="30*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="800"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Column="0" Header="Graph">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48"/>
                            <ColumnDefinition x:Name="GraphColumn" Width="*"/>
                            <ColumnDefinition x:Name="TextColumn" Width="0"/>
                        </Grid.ColumnDefinitions>

                        <ToolBarTray Orientation="Vertical" Grid.Column="0">
                            <ToolBar ToolBarTray.IsLocked="True">
                                <RadioButton GroupName="RenderingMode" Style="{StaticResource MaterialDesignToolRadioButton}" IsChecked="{Binding GraphModeSelected}" Foreground="{DynamicResource MaterialDesignBody}" >
                                    <materialDesign:PackIcon Kind="Graphql"/>
                                </RadioButton>
                                <RadioButton GroupName="RenderingMode" Style="{StaticResource MaterialDesignToolRadioButton}" IsChecked="{Binding TextModeSelected}" Foreground="{DynamicResource MaterialDesignBody}" >
                                    <materialDesign:PackIcon Kind="Text"/>
                                </RadioButton>
                            </ToolBar>
                        </ToolBarTray>
                        <wpf:ChromiumWebBrowser Grid.Column="1" x:Name="Browser" Background="Yellow" SizeChanged="Browser_SizeChangedAsync" Grid.ColumnSpan="2"/>
                        <wpf:ChromiumWebBrowser Grid.Column="2" x:Name="TextBrowser" />
                    </Grid>
                </GroupBox>

                <GridSplitter Grid.Column="1"  VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="5" Background="Silver"/>

                <GroupBox x:Name="ContextualInformation" Grid.Column="2" Header="Information" Margin="0,0,4,0">
                </GroupBox>
            </Grid>

            <GridSplitter Grid.Row="1"  HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="5" Background="Silver"/>

            <GroupBox Header="Queries"  Grid.Row="2">
                <DockPanel >
                    <ToolBarTray DockPanel.Dock="Top" x:Name="QueryToolbarTray" Orientation="Horizontal"  >
                        <ToolBar Style="{DynamicResource MaterialDesignToolBar}"  ToolBarTray.IsLocked="True">
                            <Button Command="{Binding OpenQueryCommand}" ToolTip="Open Query">
                                <materialDesign:PackIcon Kind="OpenInApp"/>
                            </Button>
                            <Button Command="{Binding SaveQueryCommand}" ToolTip="Save">
                                <materialDesign:PackIcon Kind="ContentSave" />
                            </Button>
                            <Button x:Name="ExecuteQueryButton"  Command="{Binding ExecuteQueryCommand}" ToolTip="Execute query" ToolBar.OverflowMode="Never" >
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Play"/>
                                </StackPanel>
                            </Button>
                            <Separator/>
                            <Button Command="Cut" ToolTip="Cut" ToolBar.OverflowMode="Never">
                                <materialDesign:PackIcon Kind="ContentCut" />
                            </Button>
                            <Button Command="Copy" ToolTip="Copy" ToolBar.OverflowMode="Never">
                                <materialDesign:PackIcon Kind="ContentCopy" />
                            </Button>
                            <Button Command="Paste" ToolTip="Paste" ToolBar.OverflowMode="Never">
                                <materialDesign:PackIcon Kind="ContentPaste" />
                            </Button>
                            <Button Command="Delete" ToolTip="Delete" ToolBar.OverflowMode="Never">
                                <materialDesign:PackIcon Kind="Delete" />
                            </Button>
                            <Separator/>
                            <Button Command="Undo" ToolTip="Undo" >
                                <materialDesign:PackIcon Kind="Undo" />
                            </Button>
                            <Button Command="Redo" ToolTip="Redo" >
                                <materialDesign:PackIcon Kind="Redo" />
                            </Button>
                            <Separator></Separator>
                            <Button  x:Name="IncreaseQueryFontSizeButton" Command="{Binding IncreaseQueryFontSize}"  ToolTip="Increase font size" >
                                <materialDesign:PackIcon Kind="FormatFontSizeIncrease" />
                            </Button>
                            <Button x:Name="DecreaseQueryFontSizeButton" Command="{Binding DecreaseQueryFontSize}" ToolTip="Decrease font size" >
                                <materialDesign:PackIcon Kind="FormatFontSizeDecrease" />
                            </Button>
                        </ToolBar>
                    </ToolBarTray>

                    <avalonedit:TextEditor x:Name="CypherEditor" Grid.Row="1" Margin="0,5,0,0" ShowLineNumbers="True" FontFamily="Courier" FontSize="{Binding QueryEditorFontSize}">
                        match p = (m: Method) -[r:CALLS]-> (m1: Method) where r.Count > 3 return p limit 20
                    </avalonedit:TextEditor>
                </DockPanel>
            </GroupBox>
        </Grid>
    </DockPanel>
</Window>
